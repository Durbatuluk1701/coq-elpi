
pred gref->string2.aux i:gref, i:list string, i:string, o:string.
gref->string2.aux _ [] Acc Acc.
gref->string2.aux Gr [Hd | Tl] Acc R :-
  if (Acc = "") (Acc' = Hd) (Acc' is Hd ^ "." ^ Acc), 
  coq.say Acc',
  if ({coq.locate Acc'} = Gr) (coq.say Gr Acc', Acc' = R) (
    coq.say "Failing with" Acc',
    gref->string2.aux Gr Tl Acc' R
  ).

pred gref->string2 i:gref, o:string.
gref->string2 Gr Str :-
  coq.say "Gr is" Gr,
  coq.gref->path Gr Path, 
  coq.gref->id Gr Id, 
  std.append [Id] {std.rev Path} PathRev,
  coq.say "BBB",
  gref->string2.aux Gr PathRev "" Str.